alias d 'alias';d S 'set -g';d n 'echo';d A 'math';d w 'jq -re';d H 'sed -nE';function p;read -l x;printf -- (n $x|H "s/%/\\\x/g;s/.*$argv[1]=([^&]*).*/\1/p");end;S Q $argv[1];S R (n $Q|p 'v');S j '.signatureCipher';S k -A "Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0" -fsL;S D (curl $k $Q || exit 1);S E (n $D|H 's/.*ytInitialPlayerResponse = \{(.+)\};/\{\1\}/p');S F (curl $k www.youtube.com/(n $D|H 's/.*"([^"]+base.js).*/\1/p') || exit 1);S r (n $E|w '.streamingData.adaptiveFormats|sort_by(-.bitrate)');n $D>page.html;n $E>config.json;n $F>player.js;S z '\)\{([^\}]+).*' ;S N (n $F|H 's/\$/\\\$/g;s/.*alr.*yes.*=(.*)\(dec.*/\1/p') ;S O (string split ';' (n $F|H "s/.*$N=function\(a$z/\1/p"));S O $O[2..-2];for q in video audio;S K (n $r|w '[.[]|select(.mimeType|test("'$q'"))][0]');S J (n $K|w $j>/dev/null; n $status);S P (if test $J -ne 0;n $K|w '.url';else;n -n $K|w $j|p 'url';n \&sig=(;S I (n $K|w $j|p 's');for L in $O;S e (n $L|H 's/[^,]+,([0-9]+)\)/\1/p');S M (n $L|H 's/\(.*$//;s/\./\.\*/p');S G (n $F|H "s/.*$M:function[^\)]+$z/\1/p");S I (switch $G;case 'a.rev*';n $I|rev;case 'var c=a*';S I (n $I|string split '');S e (A $e%(count $I)+1);S i $I[1];S I[1] $I[$e];S I[$e] $i;string join '' $I;case 'a.spl*';S I (n $I|string split '');string join '' $I[(A $e+1)..-1];end);end;n $I);end);S g 1048576;S x (n $K|w '.contentLength');S B $x;cat (for h in (seq 0 (A -s0 $B/$g));S C (if test $x -lt $g;n $x;else;n $g;end);S y (A $B-$x);curl $k -o $h.$q.$R $P\&range=$y-(A $y+$C);S x (A $x-$C-1);while test (jobs|wc -l) -ge 8;wait -n curl;end;n -ne "\r$y">&2;n $h.$q.$R;end;wait)>$q.$R;n "...$q ok">&2;end;ffmpeg -i video.$R -i audio.$R -c copy $R.mkv;rm *.$R